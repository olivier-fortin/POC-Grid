.grid-container {
//.grid-container .react-view { //React-only
    box-sizing: border-box;
    margin-left: $column-gutter;
    margin-right: $column-gutter;

    > .row,
    > * > .row {
        align-items: stretch;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-left: -$column-gutter/2;
        margin-right: -$column-gutter/2;

        > [class*="col-"] {
            //display: flex;
            //flex-direction: row;
            //flex-wrap: wrap;
            min-height: 20px;
        }
    }
    .row > * > .row {
        @include xs-only {
            @for $i from 1 through $column-count-xs {
                > [class*="col-xs-#{$i}"] {
                    background-color: orange !important;
                    //margin-left: -$column-gutter-xs/2;
                    //margin-right: -$column-gutter-xs/2;
                    margin-left: 0;
                    margin-right: 0;
                    width: calc(((100% / #{$column-count-xs}) * #{$i}) - #{$column-gutter-xs} / 2);
                    &.full-size {
                        background-color: darkviolet !important;
                        margin-left: -$column-gutter-xs;
                        margin-right: -$column-gutter-xs;
                        width: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} * 2);
                    }
                }
                .offset-xs-#{$i} {
                    margin-left: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} / 2);
                }
            }
        }
    }

    @include xs-only {
        margin-left: $navigation-size-xs;
        margin-right: $column-gutter-xs;

        > .row,
        > * > .row {
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;

        }

        @for $i from 1 through $column-count-xs {
            .col-xs-#{$i} {
                background: aquamarine;
                box-sizing: border-box;
                margin-left: $column-gutter-xs/2;
                margin-right: $column-gutter-xs/2;
                width: calc(((100% / #{$column-count-xs}) * #{$i}) - #{$column-gutter-xs});
                &.full-width {
                    margin-left: -$column-gutter-xs/2;
                    margin-right: -$column-gutter-xs/2;
                    width: calc(((100% / #{$column-count-xs}) * #{$i}) - #{$column-gutter-xs} + #{$column-gutter-xs} * 2);
                }
            }
            .offset-xs-#{$i} {
                margin-left: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} / 2);
            }
        }
    }

    @include sm {
        margin-right: $column-gutter;

        > .row,
        > * > .row {
            margin-left: -$column-gutter/2;
            margin-right: -$column-gutter/2;
        }
    }

    @each $breakpoint, $column, $color in
            (sm, $column-count-sm, lightsalmon),
            (md, $column-count-md, chartreuse),
            (lg, $column-count-lg, aquamarine),
            (xl, $column-count-xl, purple),
            (xxl, $column-count-xxl, lightblue) {
        @for $i from 1 through $column {
            .col-#{$breakpoint}-#{$i} {
                background: $color;
                box-sizing: border-box;
                margin-left: $column-gutter/2;
                margin-right: $column-gutter/2;
                width: calc(((100% / #{$column}) * #{$i}) - #{$column-gutter});
                //&.full-width {
                //    margin-left: -#{$column-gutter}/2;
                //    margin-right: -#{$column-gutter}/2;
                //    width: calc(((100% / #{$column}) * #{$i}) - #{$column-gutter} + #{$column-gutter} * 2);
                //}
            }
            .offset-#{$breakpoint}-#{$column} {
                margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter} / 2);
            }
        }
    }
}