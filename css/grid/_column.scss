.grid-container {
    //.grid-container .react-view { //React-only
    box-sizing: border-box;
    margin-left: $column-gutter;
    margin-right: $column-gutter;

    @include xs-only {
        margin-left: $column-gutter-xs;
        margin-right: $column-gutter-xs;
    }

    > .row,
    > * > .row {
        align-items: stretch;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-left: -$column-gutter/2;
        margin-right: -$column-gutter/2;

        @include xs-only {
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;
        }
    }

    .row > * > .row {
        background-color: aquamarine!important;
        font-size: 0;
        margin-left: -$column-gutter/2;
        margin-right: -$column-gutter/2;

        @include xs-only {
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;
        }

        @each $breakpoint, $min, $max, $column, $color in (xs, $min-xsmall, $max-xsmall, $column-count-xs, lightsalmon),
            (sm, $min-small, $max-small, $column-count-sm, lightsalmon),
            (md, $min-medium, $max-medium, $column-count-md, chartreuse),
            (lg, $min-large, $max-large, $column-count-lg, aquamarine),
            (xl, $min-xlarge, $max-xlarge, $column-count-xl, purple),
            (xxl, $min-xxlarge, $max-xxlarge, $column-count-xxl, lightblue) {

            @media (min-width: #{$min}) and (max-width: #{$max}) {

                .full-width {
                    background: silver;
                    font-size: initial;
                    width: calc(100% + #{$column-gutter});

                    @include xs-only {
                        width: calc(100% + #{$column-gutter-xs});
                    }
                }

                @for $i from 1 through $column {
                    > [class*="col-#{$breakpoint}-#{$i}"] {
                        display: inline-flex;
                        font-size: initial;

                        @if $i == $column {
                            margin-left: $column-gutter/2;
                            margin-right: $column-gutter/2;
                            width: calc(100% - #{$column-gutter});

                            @include xs-only {
                                margin-left: $column-gutter-xs/2;
                                margin-right: $column-gutter-xs/2;
                                width: calc(100% - #{$column-gutter-xs});
                            }

                        } @else {
                            margin-left: $column-gutter/2;
                            margin-right: $column-gutter/2;
                            width: calc((((100% / #{$column}) * #{$i}) - #{$column-gutter}));

                            @include xs-only {
                                margin-left: $column-gutter-xs/2;
                                margin-right: $column-gutter-xs/2;
                                width: calc((((100% / #{$column}) * #{$i}) - #{$column-gutter-xs}));
                            }
                        }
                    }

                    .offset-#{$breakpoint}-#{$column} {
                        //margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter} / 2);
                    }
                }
            }
        }
    }

    @each $breakpoint, $min, $max, $column, $color in (xs, $min-xsmall, $max-xsmall, $column-count-xs, lighten(lightsalmon, 5)),
        (sm, $min-small, $max-small, $column-count-sm, lighten(tomato, 5)),
        (md, $min-medium, $max-medium, $column-count-md, lighten(palegreen, 5)),
        (lg, $min-large, $max-large, $column-count-lg, lighten(paleturquoise, 5)),
        (xl, $min-xlarge, $max-xlarge, $column-count-xl, lighten(lightblue, 5)),
        (xxl, $min-xxlarge, $max-xxlarge, $column-count-xxl, lighten(mediumturquoise, 5)) {

        @media (min-width: #{$min}) and (max-width: #{$max}) {

            .full-width {
                background: silver;
                margin-left: calc(-#{$column-gutter}/2);
                margin-right: calc(-#{$column-gutter}/2);
                width: calc((100% - #{$column-gutter} + (#{$column-gutter} * 2)));

                @include xs-only {
                    margin-left: calc(-#{$column-gutter-xs}/2);
                    margin-right: calc(-#{$column-gutter-xs}/2);
                    width: calc((100% - #{$column-gutter-xs} + (#{$column-gutter-xs} * 2)));
                }

                > .row {
                   margin-left: $column-gutter/2;
                   margin-right: $column-gutter/2;

                   @include xs-only {
                     margin-left: $column-gutter-xs/2;
                     margin-right: $column-gutter-xs/2;
                    }
                }
            }

            @for $i from 1 through $column {
                .col-#{$breakpoint}-#{$i} {
                    background-color: $color;
                    box-sizing: border-box;
                    margin-left: $column-gutter/2;
                    margin-right: $column-gutter/2;
                    width: calc(((100% / #{$column}) * #{$i}) - #{$column-gutter});

                    @include xs-only {
                        margin-left: $column-gutter-xs/2;
                        margin-right: $column-gutter-xs/2;
                        width: calc(((100% / #{$column}) * #{$i}) - #{$column-gutter-xs});
                    }

                    @for $j from 1 through $column {
                        .row > [class*="col-#{$breakpoint}-#{$j}"] {
                            width: calc((((100% / #{$i}) * #{$j}) - #{$column-gutter}));

                            @include xs-only {
                                width: calc((((100% / #{$i}) * #{$j}) - #{$column-gutter-xs}));
                            }
                        }
                    }
                }

                .offset-#{$breakpoint}-#{$i} {
                    margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter} / 2);

                    @include xs-only {
                        margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter-xs} / 2);
                    }
                }
            }
        }
    }

}