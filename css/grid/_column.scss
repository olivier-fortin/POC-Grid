.grid-container {
//.grid-container .react-view { //React-only
    box-sizing: border-box;
    margin-left: $column-gutter;
    margin-right: $column-gutter;

    > .row,
    > * > .row {
        align-items: stretch;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-left: -$column-gutter/2;
        margin-right: -$column-gutter/2;
    }

    .row > * > .row {
        margin-left: 0;
        margin-right: 0;

        @include xs-only {

            .full-width {
                background-color: darkviolet;
                margin-left: -$column-gutter-xs;
                width: calc(100% + (#{$column-gutter-xs} *2));
            }

            @for $i from 1 through $column-count-xs {
                > [class*="col-xs-#{$i}"] {
                    margin-left: 0;
                    margin-right: 0;
                    width: calc(((100% / #{$column-count-xs}) * #{$i}) + (#{$column-gutter-xs}/2 * #{$i}/2) - #{$column-gutter-xs});
                }
                .offset-xs-#{$i} {
                    margin-left: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} / 2);
                }
            }
        }
    }

    @include xs-only {
        margin-left: $column-gutter-xs;
        margin-right: $column-gutter-xs;

        > .row,
        > * > .row {
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;

        }

       .full-width {
            background-color: darkviolet;
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;
            width: calc(100% + #{$column-gutter-xs});
        }

        @for $i from 1 through $column-count-xs {
            .col-xs-#{$i} {
                background: aquamarine;
                box-sizing: border-box;
                margin-left: $column-gutter-xs/2;
                margin-right: $column-gutter-xs/2;
                width: calc(((100% / #{$column-count-xs}) * #{$i}) - #{$column-gutter-xs});
            }
            .offset-xs-#{$i} {
                margin-left: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} / 2);
            }
        }
    }

    @include sm {
        margin-right: $column-gutter;

        > .row,
        > * > .row {
            margin-left: -$column-gutter/2;
            margin-right: -$column-gutter/2;
        }
    }

    .row > * > .row {
        @each $breakpoint, $min, $max, $column, $color in (sm, $min-small, $max-small, $column-count-sm, lightsalmon),
            (md, $min-medium, $max-medium, $column-count-md, chartreuse),
            (lg, $min-large, $max-large, $column-count-lg, aquamarine),
            (xl, $min-xlarge, $max-xlarge, $column-count-xl, purple),
            (xxl, $min-xxlarge, $max-xxlarge, $column-count-xxl, lightblue) {

            @media (min-width: #{$min}) and (max-width: #{$max}) {

                .full-width {
                    background: silver;
                    margin-left: -$column-gutter;
                    margin-right: 0;
                    width: calc(100% + (#{$column-gutter} * 2));
                }

                @for $i from 1 through $column {
                    > [class*="col-#{$breakpoint}-#{$i}"] {
                        //$col-number: (#{$i} - 1);
                        //$column-width-percentage: (100% - (#{$column-gutter} * (#{$i} - 1))); //pour sm : 461px
                        //content: '#{$column-width-percentage}';
                        //margin-left: 0;
                        //margin-right: 0;
                        
                        //width: calc(#{$column-gutter} * (#{$i} - 1));
                        //width: calc(((#{$column-width-percentage} / #{$column}) * #{$i}) - (#{$column-gutter} * (#{$i} - 1)));
                        //+ (#{$column-gutter} * (#{$i} - 1))
                        //width: calc(100% - (#{$column-gutter} * (#{$i} - 1))); 

                        /* 
                            100% sm : 601px
                            pour sm 8 cols : 461px + 140px gutters = 601px
                            pour sm 6 cols : 345.75px + 100px gutters = 445.75px 
                            pour sm 4 cols : 229.3px + 60px gutters = 289.30px
                            pour sm 3 cols : 172.875px + 40px gutters = 212.875px
                            pour sm 2 cols : 115.25px + 20px gutters = 135.25px
                            pour sm 1 cols : 57.625px + 0px gutters = 57.625px
                        */

                        display: inline-block;

                        @if $i == 1 {

                            //margin-left: 0;
                            //width: calc(((100% - ((#{$column} - 1) * #{$column-gutter})) / (#{$column})));

                        } @else if $i == $column {

                            margin-left: 0;
                            width: 100%;

                        } @else {
                            margin-left: $column-gutter / 2;
                            margin-right: $column-gutter / 2;

                            &:first-child {
                                margin-left: 0;
                                width: calc((((100% / #{$column}) * #{$i}) - #{$column-gutter}) + ((#{$column-gutter} / #{$column}) * #{$i}));
                            }
                            &:last-child {
                                margin-right: 0;
                                width: calc((((100% / #{$column}) * #{$i}) - #{$column-gutter}) - ((#{$column-gutter} / #{$column}) * #{$i}));
                            }
                        }
                    }
                    
                    .offset-#{$breakpoint}-#{$column} {
                        margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter} / 2);
                    }
                }
            }
        }
    }

    @each $breakpoint, $min, $max, $column, $color in (sm, $min-small, $max-small, $column-count-sm, lighten(lightsalmon, 5)),
        (md, $min-medium, $max-medium, $column-count-md, lighten(chartreuse, 5)),
        (lg, $min-large, $max-large, $column-count-lg, lighten(aquamarine, 5)),
        (xl, $min-xlarge, $max-xlarge, $column-count-xl, lighten(purple, 5)),
        (xxl, $min-xxlarge, $max-xxlarge, $column-count-xxl, lighten(lightblue, 5)) {

        @media (min-width: #{$min}) and (max-width: #{$max}) {

            .full-width {
                background: silver;
                margin-left: calc(-#{$column-gutter}/2);
                margin-right: calc(-#{$column-gutter}/2);
                width: calc((100% - #{$column-gutter} + (#{$column-gutter} * 2));
            }

            @for $i from 1 through $column {
                .col-#{$breakpoint}-#{$i} {
                    background-color: $color;
                    box-sizing: border-box;
                    margin-left: $column-gutter/2;
                    margin-right: $column-gutter/2;
                    width: calc(((100% / #{$column}) * #{$i}) - #{$column-gutter});
                }
                
                .offset-#{$breakpoint}-#{$column} {
                    margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter} / 2);
                }
            }
        }
    }

}