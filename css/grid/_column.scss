.grid-container {
//.grid-container .react-view { //React-only
    box-sizing: border-box;
    margin-left: $column-gutter;
    margin-right: $column-gutter;

    > .row,
    > * > .row {
        align-items: stretch;
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-left: -$column-gutter/2;
        margin-right: -$column-gutter/2;
    }
    .row > * > .row {
        margin-left: 0;
        margin-right: 0;

        @include xs-only {

            .col-xs-#{$column-count-xs}.full-width {
                background-color: darkviolet;
                margin-left: -$column-gutter-xs;
                //margin-right: -$column-gutter-xs/2;
                width: calc(100% + #{$column-gutter-xs} + #{$column-gutter-xs});
            }

            @for $i from 1 through $column-count-xs {
                > [class*="col-xs-#{$i}"] {
                    margin-left: 0;
                    margin-right: 0;
                    width: calc(((100% / #{$column-count-xs}) * #{$i}) + (#{$column-gutter-xs}/2 * #{$i}/2) - #{$column-gutter-xs});
                }
                .offset-xs-#{$i} {
                    margin-left: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} / 2);
                }
            }
        }
    }

    @include xs-only {
        margin-left: $column-gutter-xs;
        //margin-left: $navigation-size-xs;
        margin-right: $column-gutter-xs;

        > .row,
        > * > .row {
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;

        }

        .col-xs-#{$column-count-xs}.full-width {
            background-color: darkviolet;
            margin-left: -$column-gutter-xs/2;
            margin-right: -$column-gutter-xs/2;
            width: calc(100% + #{$column-gutter-xs});
        }

        @for $i from 1 through $column-count-xs {
            .col-xs-#{$i} {
                background: aquamarine;
                box-sizing: border-box;
                margin-left: $column-gutter-xs/2;
                margin-right: $column-gutter-xs/2;
                width: calc(((100% / #{$column-count-xs}) * #{$i}) - #{$column-gutter-xs});
            }
            .offset-xs-#{$i} {
                margin-left: calc(((100% / #{$column-count-xs}) * #{$i}) + #{$column-gutter-xs} / 2);
            }
        }
    }

    @include sm {
        margin-right: $column-gutter;

        > .row,
        > * > .row {
            margin-left: -$column-gutter/2;
            margin-right: -$column-gutter/2;
        }
    }

    @each $breakpoint, $min, $max, $column, $color in (sm, $min-small, $max-small, $column-count-sm, lightsalmon),
            (md, $min-medium, $max-medium, $column-count-md, chartreuse),
            (lg, $min-large, $max-large, $column-count-lg, aquamarine),
            (xl, $min-xlarge, $max-xlarge, $column-count-xl, purple),
            (xxl, $min-xxlarge, $max-xxlarge, $column-count-xxl, lightblue) {
        @media (min-width: #{$min}) and (max-width: #{$max}) {

            .col-#{$breakpoint}-#{$column} {
                &.full-width {
                    margin-left: calc(-#{$column-gutter}/2);
                    margin-right: calc(-#{$column-gutter}/2);
                    width: calc((100% - #{$column-gutter} + #{$column-gutter} * 2);
                }
            }

            @for $i from 1 through $column {
                .col-#{$breakpoint}-#{$i} {
                    background: $color;
                    box-sizing: border-box;
                    margin-left: $column-gutter/2;
                    margin-right: $column-gutter/2;
                    width: calc(((100% / #{$column}) * #{$i}) - #{$column-gutter});
                }
                .offset-#{$breakpoint}-#{$column} {
                    margin-left: calc(((100% / #{$column}) * #{$i}) + #{$column-gutter} / 2);
                }
            }
        }
    }
}